.. _faq_build-label:

FAQs and Common Build Problems
==============================

CMake can not locate config-cpp.cmake...
----------------------------------------

The actual error message is a long boilerplate error message generated by CMake
when ``find_package`` fails.  It'll talk about not being able to find one of
several files including ``FindCPP.cmake``, ``Findcpp.cmake``,
``ConfigCPP.cmake``, and ``config-cpp.cmake``.  It'll also talk about setting
``CMAKE_PREFIX_PATH`` and/or ``CMAKE_MODULE_PATH``.

Cause
^^^^^

CMake can not find CPP.

Solution
^^^^^^^^

Ensure you have built and installed CPP.  If CPP is installed to a non-standard
location (*i.e.*, not ``/usr/local`` on a Unix-like machine) make sure you are
providing CMake with the path to the CPP installation *via* the
``CMAKE_PREFIX_PATH`` variable.

For private repos CPP_GITHUB_TOKEN must be a valid token
--------------------------------------------------------

Cause
^^^^^

CPP is trying to clone a private GitHub repository and you have not provided CPP
with a valid GitHub authentication token.

Solution
^^^^^^^^

Assuming you have permission to read the repository and have generated a GitHub
authentication token (see `here <https://help.github.com/articles/creating-a-
personal-access-token-for-the-command-line/>`_ for information on doing so) make
sure you have set the value of ``CPP_GITHUB_TOKEN`` to the value of the token.

Argument to CMake is not being honored by dependency
----------------------------------------------------

Cause
^^^^^

CMake unfortunately does not provide a way to know what variables were given to
the ``cmake`` command and which variables were set during the configuration. In
turn, CPP can only automatically forward select variables to dependencies. If
the argument you provided to the ``cmake`` command is not one of these variables
it will not be forwarded automatically (as a rule of thumb, CPP only forwards
variables that have ``CMAKE`` in them).


Solution
^^^^^^^^

The only way to control which variables are forwarded to dependencies is with a
toolchain file :ref:`toolchains-label`.  All arguments in a toolchain file are
forwarded to all subdependencies.


